{"version":3,"sources":["App.js","index.js"],"names":["HowToPlay","props","className","CharGenerator","React","useState","chars","setChars","charID","setCharID","addChars","useCallback","char","prev","deleteChar","id","filter","top","Math","random","left","fontSizeRatio","fontsize","randNumIn256","round","rgb","toString","onKeyPress","e","key","isExisting","tabIndex","CharCluster","charList","map","Char","height","style","fontSize","position","color","margin","transform","onMouseOver","from","opacity","to","App","isMorning","setIsMorning","toggleMorning","onClick","ReactDOM","render","StrictMode","rel","href","document","getElementById"],"mappings":"+OAsBA,SAASA,EAAUC,GACf,OACI,oCACI,wBAAIC,UAAW,oBAAf,eACA,yBAAKA,UAAW,uBACZ,2DACA,4CACA,yDAMhB,SAASC,EAAcF,GAAQ,IAAD,EACAG,IAAMC,SAAS,IADf,mBACnBC,EADmB,KACZC,EADY,OAEEH,IAAMC,SAAS,GAFjB,mBAEnBG,EAFmB,KAEXC,EAFW,KAIpBC,EAAWN,IAAMO,aAAY,SAACC,GAChCL,GAAS,SAACM,GAAD,OAAWD,GAAX,mBAAoBC,OAC7BJ,GAAU,SAACI,GAAD,OAAUA,EAAO,OAC5B,CAACN,EAAUE,IAERK,EAAaV,IAAMO,aAAY,SAACI,GAClCR,GAAS,SAACM,GAAD,OAAUA,EAAKG,QAAO,SAACJ,GAAD,OAAUA,EAAKG,KAAOA,UACtD,CAACR,IAgBEU,EADkB,GACZC,KAAKC,SACXC,EAHkB,GAGXF,KAAKC,SAIZE,EAAgBH,KAAKC,SACrBG,EAFc,EAEHD,EAHG,IAG4B,EAAIA,GAE9CE,EAAe,kBAAOL,KAAKM,MAAsB,IAAhBN,KAAKC,WAItCM,EAAM,IAHAF,IAAeG,SAAS,IACtBH,IAAeG,SAAS,IACzBH,IAAeG,SAAS,IAGrC,OACI,6BACI,uBAAGxB,UAAW,QAASyB,WA9BV,SAACC,GAClBlB,EAAS,CACLK,GAAIP,EACJI,KAAMgB,EAAEC,IACRZ,IAAKA,EACLG,KAAMA,EACNE,SAAUA,EACVG,IAAKA,EACLK,YAAY,KAsBqCC,SAAU,GAA3D,uBACA,kBAACC,EAAD,CAAa1B,MAAOA,EAAOQ,WAAYA,KAMnD,SAASkB,EAAY/B,GAEjB,IAAMgC,EAAWhC,EAAMK,MAAM4B,KAAI,SAACtB,GAC9B,OACI,kBAACuB,EAAD,CACIN,IAAKjB,EAAKG,GACVA,GAAIH,EAAKG,GACTH,KAAMA,EAAKA,KACXK,IAAKL,EAAKK,IACVG,KAAMR,EAAKQ,KACXE,SAAUV,EAAKU,SACfc,OAAQxB,EAAKU,SACbG,IAAKb,EAAKa,IACVX,WAAYb,EAAMa,gBAK9B,OACI,6BACKmB,GAMb,SAASE,EAAKlC,GAEV,IAAMoC,EAAQ,CACVC,SAAS,GAAD,OAAKrC,EAAMqB,SAAX,MACRiB,SAAU,WACVtB,IAAI,GAAD,OAAKhB,EAAMgB,IAAX,MACHG,KAAK,GAAD,OAAKnB,EAAMmB,KAAX,MACJoB,MAAM,GAAD,OAAKvC,EAAMwB,KAChBgB,OAAQ,EACRC,UAAU,yBAGR9B,EAAsB,UAAfX,EAAMW,KAAmB,IAAMX,EAAMW,KAElD,OACI,yBAAKyB,MAAOA,EAAOM,YAAa,kBAAM1C,EAAMa,WAAWb,EAAMc,MACzD,kBAAC,SAAD,CAAQ6B,KAAM,CAACC,QAAS,GAAIC,GAAI,CAACD,QAAS,MACrC,SAAA5C,GAAK,OAAG,yBAAKoC,MAAOpC,GAAQW,OAM9BmC,MAlIf,WAAgB,IAAD,EACuB3C,IAAMC,UAAS,GADtC,mBACJ2C,EADI,KACOC,EADP,KAELC,EAAgB9C,IAAMO,aAAY,kBAAMsC,GAAa,SAACpC,GAAD,OAAWA,OAAO,CAACoC,IAE9E,OACI,yBAAK/C,UAAW,OAAS8C,EAAY,YAAc,YAC/C,kBAAC7C,EAAD,MACA,4BACIgD,QAASD,EACThD,UAAW,eAAiB8C,EAAY,YAAc,YAErDA,EAAY,QAAU,WAE3B,kBAAChD,EAAD,QCbZoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,0BAAMC,IAAI,aAAaC,KAAK,gFAC5B,0BAAMD,IAAI,aAAaC,KAAK,4DAC5B,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b1f2f75d.chunk.js","sourcesContent":["import React from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport './App.scss';\n\nfunction App() {\n    const [isMorning, setIsMorning] = React.useState(true);\n    const toggleMorning = React.useCallback(() => setIsMorning((prev) => !prev), [setIsMorning]);\n\n    return (\n        <div className={\"App\" + (isMorning ? \"__Morning\" : \"__Night\")}>\n            <CharGenerator />\n            <button\n                onClick={toggleMorning}\n                className={\"ThemeToggle\" + (isMorning ? \"__Morning\" : \"__Night\")}\n            >\n                {isMorning ? \"Night\" : \"Morning\"}\n            </button>\n            <HowToPlay />\n        </div>\n    )\n}\n\nfunction HowToPlay(props) {\n    return (\n        <>\n            <h1 className={\"HowToPlay__Title\"}>How to play</h1>\n            <div className={\"HowToPlay__Sentence\"}>\n                <p>Click \"Generate Characters\".</p>\n                <p>Push any key.</p>\n                <p>Trace obstacle charctor.</p>\n            </div>\n        </>\n    )\n}\n\nfunction CharGenerator(props) {\n    const [chars, setChars] = React.useState([]);\n    const [charID, setCharID] = React.useState(0);\n\n    const addChars = React.useCallback((char) => {\n        setChars((prev) => [char, ...prev]);\n        setCharID((prev) => prev + 1);\n    }, [setChars, setCharID]);\n\n    const deleteChar = React.useCallback((id) => {\n        setChars((prev) => prev.filter((char) => char.id !== id))\n    }, [setChars])\n\n    const generateChar = (e) => {\n        addChars({\n            id: charID,\n            char: e.key,\n            top: top,\n            left: left,\n            fontsize: fontsize,\n            rgb: rgb,\n            isExisting: true\n        });\n    }\n\n    const randomAreaWidth = 98;\n    const randomAreaHight = 95;\n    const top = Math.random() * randomAreaHight;\n    const left = Math.random() * randomAreaWidth;\n\n    const minFontSize = 0.5\n    const maxFontSize = 5\n    const fontSizeRatio = Math.random();\n    const fontsize = fontSizeRatio * maxFontSize + (1 - fontSizeRatio) * minFontSize;\n\n    const randNumIn256 = () => (Math.round(Math.random() * 256));\n    const red = randNumIn256().toString(16);\n    const green = randNumIn256().toString(16);\n    const blue = randNumIn256().toString(16);\n    const rgb = \"#\" + red + green + blue;\n\n    return (\n        <div>\n            <p className={\"Title\"} onKeyPress={generateChar} tabIndex={0}>Generate Characters</p>\n            <CharCluster chars={chars} deleteChar={deleteChar}/>\n        </div>\n\n    )\n}\n\nfunction CharCluster(props) {\n\n    const charList = props.chars.map((char) => {\n        return (\n            <Char\n                key={char.id}\n                id={char.id}\n                char={char.char}\n                top={char.top}\n                left={char.left}\n                fontsize={char.fontsize}\n                height={char.fontsize}\n                rgb={char.rgb}\n                deleteChar={props.deleteChar}\n            />\n        );\n    })\n\n    return (\n        <div>\n            {charList}\n        </div>\n    )\n}\n\n\nfunction Char(props) {\n\n    const style = {\n        fontSize: `${props.fontsize}em`,\n        position: \"absolute\",\n        top: `${props.top}vh`,\n        left: `${props.left}vw`,\n        color: `${props.rgb}`,\n        margin: 0,\n        transform: `translate(-50%, -50%)`\n    };\n\n    const char = props.char === 'Enter' ? '!' : props.char;\n\n    return (\n        <div style={style} onMouseOver={() => props.deleteChar(props.id)}>\n            <Spring from={{opacity: 0}} to={{opacity: 0.8}}>\n                {props =><div style={props}>{char}</div>}\n            </Spring>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}