{"version":3,"sources":["CharGenerator.module.css","ToggleTheme.module.css","App.module.css","CharGenerator.tsx","SettingContext.tsx","ToggleTheme.tsx","ToolBox.tsx","HowToPlay.tsx","App.tsx","index.tsx","HowToPlay.module.css"],"names":["module","exports","CharGenerator","props","React","useState","charProfs","seCharProfs","charID","setCharID","deleteChar","useCallback","charId","prev","filter","char","id","param","top","Math","random","left","fontSizeRatio","fontsize","randNumIn256","round","red","toString","green","blue","rgb","isExisting","calcCharParam","generateChar","e","key","onKeyPress","tabIndex","className","styles","Main","CharCluster","charList","map","prof","deleteSelf","Char","style","fontSize","position","color","margin","transform","onMouseOver","from","opacity","to","defaultSetting","theme","SettingContext","createContext","ToggleTheme","useContext","newTheme","onClick","ToolBox","changeSetting","HowToPlay","Title","Sentence","App","setting","setSetting","obj","Object","assign","Provider","value","ReactDOM","render","StrictMode","rel","href","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,KAAO,8B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,0CAA0C,QAAU,qEAAqE,MAAQ,qE,mBCA1JD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,QAAU,qCAAqC,MAAQ,qC,+JCuB5FC,EAA8B,SAACC,GAAW,IAAD,EACVC,IAAMC,SAAsB,IADlB,mBACpCC,EADoC,KACzBC,EADyB,OAEfH,IAAMC,SAAS,GAFA,mBAEpCG,EAFoC,KAE5BC,EAF4B,KAWrCC,EAAaN,IAAMO,aAAwB,SAACC,GAC9CL,GAAY,SAACM,GAAD,OAAUA,EAAKC,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOJ,UACzD,CAACL,IAEEU,EA4EV,WACI,IAEMC,EADkB,GACZC,KAAKC,SACXC,EAHkB,GAGXF,KAAKC,SAIZE,EAAgBH,KAAKC,SACrBG,EAFc,EAEHD,EAHG,IAG4B,EAAIA,GAE9CE,EAAe,kBAAOL,KAAKM,MAAsB,IAAhBN,KAAKC,WACtCM,EAAMF,IAAeG,SAAS,IAC9BC,EAAQJ,IAAeG,SAAS,IAChCE,EAAOL,IAAeG,SAAS,IAGrC,MAAO,CACHT,IAAKA,EACLG,KAAMA,EACNE,SAAUA,EACVO,IANQ,IAAMJ,EAAME,EAAQC,EAO5BE,YAAY,GAlGFC,GAERC,EAAe7B,IAAMO,aAA8D,SAAAuB,GACrF3B,GAAY,SAACM,GAAD,OAAW,CAAEG,GAAIR,EAAQO,KAAMmB,EAAEC,IAAKlB,MAAOA,IAA7C,mBAAyDJ,OACrEJ,GAAU,SAACI,GAAD,OAAUA,EAAO,OAC5B,CAACL,EAAQS,IAWZ,OACI,6BACI,yBACImB,WAAYH,EACZI,SAAU,EACVC,UAAWC,IAAOC,MAHtB,uBAOA,kBAAC,EAAD,CAAalC,UAAWA,EAAWI,WAAYA,MAMrD+B,EAA0E,SAACtC,GAE7E,IAAMuC,EAAWvC,EAAMG,UAAUqC,KAAI,SAACC,GAClC,OACI,kBAAC,EAAD,CACIT,IAAKS,EAAK5B,GACV4B,KAAMA,EACNC,WAAY,kBAAM1C,EAAMO,WAAWkC,EAAK5B,UAKpD,OACI,6BACK0B,IAMPI,EAA2D,SAAC3C,GAAW,IACjEyC,EAAqBzC,EAArByC,KAAMC,EAAe1C,EAAf0C,WACR9B,EAAqB,UAAd6B,EAAK7B,KAAmB,IAAM6B,EAAK7B,KAFwB,EAGnC6B,EAAK3B,MAAlCM,EAHgE,EAGhEA,SAAUL,EAHsD,EAGtDA,IAAKG,EAHiD,EAGjDA,KAAMS,EAH2C,EAG3CA,IAGvBiB,EAAQ,CACVC,SAAS,GAAD,OAAKzB,EAAL,MACR0B,SAAU,WACV/B,IAAI,GAAD,OAAKA,EAAL,MACHG,KAAK,GAAD,OAAKA,EAAL,MACJ6B,MAAM,GAAD,OAAKpB,GACVqB,OAAQ,EACRC,UAAU,yBAGd,OACI,yBAAKL,MAAOA,EAAOM,YAAaR,GAC5B,kBAAC,SAAD,CAAQS,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,MACxC,SAAApD,GAAK,OAAI,yBAAK4C,MAAO5C,GAAQY,Q,YChGjC0C,EAA0B,CACnCC,MAAO,UACPhC,IAAK,KACLE,MAAO,KACPC,KAAM,KACN0B,QAAS,IAEAI,EAAiBvD,IAAMwD,cAAcH,G,iBCfrCI,EAAkD,SAAC1D,GAAW,IAAD,EAC9CC,IAAM0D,WAAWH,GAAjCD,EAD8D,EAC9DA,MACFK,GAFgE,yBAE3C,YAAVL,EAAsB,QAAU,WAEjD,OACI,4BACIM,QAAS,kBAAM7D,EAAM6D,QAAQ,CAAEN,MAAOK,KACtCzB,UAAWC,IAAOmB,IAEjBK,ICTAE,EAAsD,SAAC9D,GAChE,OACI,oCACI,kBAAC,EAAD,CAAa6D,QAAS7D,EAAM+D,kB,gBCL3BC,EAA0B,SAAChE,GACpC,OACI,oCACI,yBAAKmC,UAAWC,IAAO6B,OAAvB,eACA,yBAAK9B,UAAWC,IAAO8B,UACnB,6DACA,8CACA,yDACA,sD,iBCyBDC,MA7BR,WAAgB,IAAD,EACYlE,IAAMC,SAASoD,GAD3B,mBACXc,EADW,KACFC,EADE,KAGZN,EAAgB9D,IAAMO,aAWxB,SAAC8D,GAAD,OAASD,GAAW,SAAC3D,GAAD,OAAU6D,OAAOC,OAAPD,OAAA,IAAAA,CAAA,GAAmB7D,GAAQ4D,QACvD,IAIN,OACI,yBAAKnC,UAAWC,IAAOgC,EAAQb,QAC3B,kBAACC,EAAeiB,SAAhB,CAAyBC,MAAON,GAC5B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASL,cAAeA,IACxB,kBAAC,EAAD,SC3BhBY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,0BAAMC,IAAI,aAAaC,KAAK,gFAC5B,0BAAMD,IAAI,aAAaC,KAAK,4DAC5B,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1BpF,EAAOC,QAAU,CAAC,KAAO,wCAAwC,MAAQ,yBAAyB,SAAW,+B","file":"static/js/main.ad4dc7a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"CharGenerator_Main__PYUol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ToggleTheme_base__RU1oQ App_base__3WWpE\",\"Morning\":\"ToggleTheme_Morning__PzhOK ToggleTheme_base__RU1oQ App_base__3WWpE\",\"Night\":\"ToggleTheme_Night__3KN1d ToggleTheme_base__RU1oQ App_base__3WWpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"App_base__3WWpE\",\"Morning\":\"App_Morning__1oWKY App_base__3WWpE\",\"Night\":\"App_Night__2MlYs App_base__3WWpE\"};","import React from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport styles from './CharGenerator.module.css';\n\ninterface CharParam {\n        top: number;\n        left: number;\n        fontsize: number;\n        rgb: string;\n        isExisting: boolean;\n};\n\ninterface CharProf {\n    id: number;\n    char: string;\n    param: CharParam;\n};\n\ninterface DeleteChar {\n    (charId: number): void;\n}\n\ntype CharProfArr = Array<CharProf>;\n\nconst CharGenerator: React.FC<{}> = (props) => {\n    const [charProfs, seCharProfs] = React.useState<CharProfArr>([]);\n    const [charID, setCharID] = React.useState(0);\n\n    /*\n    const addChars = React.useCallback<(char: CharProf) => void>(char => {\n        setChars((prev) => [char, ...prev]);\n        setCharID((prev) => prev + 1);\n    }, [setChars, setCharID]);\n    */\n    \n    const deleteChar = React.useCallback<DeleteChar>((charId) => {\n        seCharProfs((prev) => prev.filter((char) => char.id !== charId))\n    }, [seCharProfs])\n    \n    const param = calcCharParam();\n\n    const generateChar = React.useCallback<(e: React.KeyboardEvent<HTMLDivElement>) => void>(e => {\n        seCharProfs((prev) => [{ id: charID, char: e.key, param: param }, ...prev]);\n        setCharID((prev) => prev + 1);\n    }, [charID, param]);\n    /*\n    const generateChar = (e: React.KeyboardEvent<HTMLDivElement>, ) => {\n        addChars({\n            id: charID,\n            char: e.key,\n            param: param,\n        });\n    }\n    */\n    \n    return (\n        <div>\n            <div\n                onKeyPress={generateChar}\n                tabIndex={0}\n                className={styles.Main}\n            >\n                Generate Characters\n            </div>\n            <CharCluster charProfs={charProfs} deleteChar={deleteChar} />\n        </div>\n\n    )\n};\n\nconst CharCluster: React.FC<{charProfs: CharProfArr, deleteChar: DeleteChar}> = (props) => {\n\n    const charList = props.charProfs.map((prof) => {\n        return (\n            <Char\n                key={prof.id}\n                prof={prof}\n                deleteSelf={() => props.deleteChar(prof.id)}\n            />\n        );\n    })\n\n    return (\n        <div>\n            {charList}\n        </div>\n    )\n}\n\n\nconst Char: React.FC<{ prof: CharProf, deleteSelf: () => void}>= (props) => {\n    const { prof, deleteSelf } = props\n    const char = prof.char === 'Enter' ? '!' : prof.char; // TODO: fix DASA code\n    const { fontsize, top, left, rgb } = prof.param\n\n\n    const style = {\n        fontSize: `${fontsize}em`,\n        position: 'absolute',\n        top: `${top}vh`,\n        left: `${left}vw`,\n        color: `${rgb}`,\n        margin: 0,\n        transform: `translate(-50%, -50%)`\n    } as const;\n\n    return (\n        <div style={style} onMouseOver={deleteSelf}>\n            <Spring from={{ opacity: 0 }} to={{ opacity: 0.8 }}>\n                {props => <div style={props}>{char}</div>}\n            </Spring>\n        </div>\n    )\n}\n\nfunction calcCharParam():CharParam {\n    const randomAreaWidth = 98;\n    const randomAreaHight = 95;\n    const top = Math.random() * randomAreaHight;\n    const left = Math.random() * randomAreaWidth;\n\n    const minFontSize = 0.5\n    const maxFontSize = 5\n    const fontSizeRatio = Math.random();\n    const fontsize = fontSizeRatio * maxFontSize + (1 - fontSizeRatio) * minFontSize;\n\n    const randNumIn256 = () => (Math.round(Math.random() * 256));\n    const red = randNumIn256().toString(16);\n    const green = randNumIn256().toString(16);\n    const blue = randNumIn256().toString(16);\n    const rgb = \"#\" + red + green + blue;\n\n    return {\n        top: top,\n        left: left,\n        fontsize: fontsize,\n        rgb: rgb,\n        isExisting: true\n    }\n}\n\n\nexport { CharGenerator };","import React from 'react';\n\ninterface Setting {\n    theme: string;\n    red: \"ff\";\n    green: \"ff\";\n    blue: \"ff\";\n    opacity: number;\n    \n}\n\nexport type ChangeSetting = (obj: Partial<Setting>) => void;\n\nexport const defaultSetting: Setting = {\n    theme: \"Morning\",\n    red: \"ff\",\n    green: \"ff\",\n    blue: \"ff\",\n    opacity: 0.8\n}\nexport const SettingContext = React.createContext(defaultSetting);","import React from 'react';\nimport { ChangeSetting, SettingContext } from './SettingContext';\nimport styles from './ToggleTheme.module.css';\n//import Button from '@material-ui/core';\n\nexport const ToggleTheme: React.FC<{onClick: ChangeSetting}> = (props) => {\n    const { theme, ..._ } = React.useContext(SettingContext)    \n    const newTheme = theme === 'Morning' ? 'Night' : 'Morning';\n\n    return (\n        <button\n            onClick={() => props.onClick({ theme: newTheme })}\n            className={styles[theme]}\n        >\n            {newTheme}\n        </button>\n    )\n}","import React from 'react';\nimport { ChangeSetting } from './SettingContext';\nimport { ToggleTheme } from './ToggleTheme';\n\n\nexport const ToolBox: React.FC<{ changeSetting: ChangeSetting }> = (props) => {\n    return (\n        <>\n            <ToggleTheme onClick={props.changeSetting}/>\n        </>\n    )\n}","import React from 'react';\nimport styles from './HowToPlay.module.css';\n\nexport const HowToPlay: React.FC<{}> = (props) => {\n    return (\n        <>\n            <div className={styles.Title}>How to play</div>\n            <div className={styles.Sentence}>\n                <div>Click \"Generate Characters\".</div>\n                <div>Push any key.</div>\n                <div>Trace obstacle charctor.</div>\n                <div>Click Night button</div>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport { CharGenerator } from './CharGenerator';\nimport { ToolBox } from './ToolBox';\nimport { HowToPlay } from './HowToPlay';\nimport { defaultSetting, SettingContext, ChangeSetting } from './SettingContext'\nimport styles from './App.module.css';\n\nexport function App() {\n    const [setting, setSetting] = React.useState(defaultSetting);\n\n    const changeSetting = React.useCallback<ChangeSetting>(\n        /* \"setSetting((prev) => Object.assign(prev, obj))\" didn't work\n         -> React uses Object.is with comparing. And Object.assign(target, src) return target object.\n            So above expression doesn't work.\n            Execute following code.\n\n            const foo = { a: 1, b: 2 };\n            const bar = { b: 3, c: 4 };\n            const test = Object.is(foo, Object.assign({ ...foo }, bar));\n            console.log(test);\n        */\n        (obj) => setSetting((prev) => Object.assign({ ...prev }, obj))\n        , []);\n    \n    \n    \n    return (\n        <div className={styles[setting.theme]}>\n            <SettingContext.Provider value={setting}>\n                <CharGenerator/>\n                <ToolBox changeSetting={changeSetting}/>\n                <HowToPlay />\n            </SettingContext.Provider>\n        </div>\n    )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"HowToPlay_base__a7naZ App_base__3WWpE\",\"Title\":\"HowToPlay_Title__vn55U\",\"Sentence\":\"HowToPlay_Sentence__1YiXk\"};"],"sourceRoot":""}